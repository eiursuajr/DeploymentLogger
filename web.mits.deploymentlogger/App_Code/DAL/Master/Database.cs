
// Generated by MyGeneration Version # (1.1.5.0)

using System;
using System.Data;
using DL_DAL.Master;

namespace DL_WEB.DAL.Master
{
	public class Database : _Database
    {
        #region Constructor

		public Database()
		{
            base.ConnectionString = Master.DBConnectionString;
        }

        #endregion

        #region Cached Databases

        protected DataTable m_dtDatabases = null;

        public DataTable Databases
        {
            get
            {
                if (null == m_dtDatabases)
                {
                    ReloadCache();
                }

                return m_dtDatabases;
            }
        }

        #endregion

        #region Instance

        protected static Database m_Database = null;

        public static Database Instance
        {
            get
            {
                if (null == m_Database)
                {
                    m_Database = new Database();
                }
                return m_Database;
            }
        }

        #endregion

        #region Private Methods

        protected void ReloadCache()
        {
            this.LoadAll();
            m_dtDatabases = this.DefaultView.Table;
        }

        #endregion

        #region Public Methods

        public DataView LoadAllDatabases()
        {
            base.LoadAll();
            return base.DefaultView;
        }

        #endregion

        #region Public Static Methods

        public static string GetConnectionString(int databaseID)
        {
            Database db = new Database();
            if (db.LoadByPrimaryKey(databaseID))
                return db.DBConnectionString;
            else
                return String.Empty;
        }

        #endregion
    }
}
