
// Generated by MyGeneration Version # (1.1.5.0)

using System;
using DL_DAL.Client;
using System.Data;
using System.Collections.Specialized;

namespace DL_WEB.DAL.Client
{
	public class LogEntry : _LogEntry
	{
		public LogEntry()
		{
		}

		public DataView LoadLogEntryByPrimaryKey(int logEntryID)
		{
			if (logEntryID > 0)
				base.LoadByPrimaryKey(logEntryID);
			else
			{
				base.AddNew();
				base.LogEntryID = base.LogEntryTypeID = base.ProjectID = 0;
				base.TimeStamp = DateTime.Now;
			}
			return base.DefaultView;
		}

		public DataView LoadAllLogEntryByUpdateID(int iUpdateID)
		{
            DL_DAL.Client.LogEntriesView oLogEntriesView = new LogEntriesView();
            oLogEntriesView.Where.UpdateID.Value = iUpdateID;
            oLogEntriesView.Where.UpdateID.Operator = MyGeneration.dOOdads.WhereParameter.Operand.Equal;
            oLogEntriesView.Query.Load();

            return oLogEntriesView.DefaultView;
		}

		public static DataView LoadAllPendingLogEntryByProjectID(int projectID)
		{
            LogEntriesView oLogEntries = new LogEntriesView();
            if (projectID > 0)
			{
                oLogEntries.Where.ProjectID.Value = projectID;
                oLogEntries.Where.ProjectID.Operator = MyGeneration.dOOdads.WhereParameter.Operand.Equal;
                oLogEntries.Where.UpdateID.Operator = MyGeneration.dOOdads.WhereParameter.Operand.IsNull;
                oLogEntries.Query.Load();
			}

			return oLogEntries.DefaultView;
		}

		public void Delete(int logEntryID)
        {
            base.LoadByPrimaryKey(logEntryID);
            base.LogEntryID = logEntryID;
            base.MarkAsDeleted();
            base.Save();
		}

		public void IncludeInUpdate(int logEntryID, int updateID)
		{
			this.LoadLogEntryByPrimaryKey(logEntryID);
			base.UpdateID = updateID;
			base.Save();
		}

        public int Update(int logEntryID, string header, string description, int logEntryTypeID, int projectID, int logEntryStatusID, 
            string publicDescription, string publicHeader, int impactLevelID, int projectSectionID)
		{
			this.LoadLogEntryByPrimaryKey(logEntryID);

            if (description == null)
                description = string.Empty;
            if (publicDescription == null)
                publicDescription = string.Empty;
            if (publicHeader == null)
                publicHeader = string.Empty;
			
            base.Header = header;
            base.Description = description;
			base.LogEntryTypeID = logEntryTypeID;
			base.ProjectID = projectID;
			base.LogEntryStatusID = logEntryStatusID;
		    base.PublicDescription = publicDescription;
		    base.PublicHeader = publicHeader;
            base.ImpactLevelID = impactLevelID;
            base.ProjectSectionID = projectSectionID;

			base.Save();

			return base.LogEntryID;
		}
    }
}
