
// Generated by MyGeneration Version # (1.1.5.0)

using System;
using DL_DAL.Client;
using System.Data;
using System.Data.SqlClient;
using System.Collections.Specialized;
using MyGeneration.dOOdads;

using DL_WEB.BLL;

namespace DL_WEB.DAL.Client
{
    public class AddressBook : _AddressBook
    {
        #region Constructor 

        public AddressBook()
        {
        }

        #endregion

        #region LoadUserContacts

        public DataView LoadUserContacts(int iUserID)
        {
            this.Where.UserID.Value = iUserID;
            this.Where.UserID.Operator = WhereParameter.Operand.Equal;
            this.Query.Load();
            return this.DefaultView;
        }

        #endregion

        #region LoadAddressBookByPrimaryKey

        public DataView LoadAddressBookByPrimaryKey(int entryID)
        {
            if (entryID > 0)
                base.LoadByPrimaryKey(entryID);
            else
            {
                base.AddNew();
                base.EntryID = base.UserID = 0;
                base.IsShared = false;
            }
            return base.DefaultView;
        }

        #endregion

        #region Delete

        public void Delete(int entryID)
        {
            ListDictionary parameters = new ListDictionary();
            parameters.Add(Parameters.EntryID, entryID);
            base.LoadFromSqlNoExec("[" + base.SchemaStoredProcedure + "DeleteAddressBook]", parameters);
        }

        #endregion

        #region Update

        public int Update(int entryID, string firstName, string lastName, string middleName, string homePhone, string workPhone, string primaryEmail,
            string secondaryEmail, int userID, bool isShared, string businessAddress, string company, string homeAddress, string jobTitle)
        {
            this.LoadAddressBookByPrimaryKey(entryID);

            base.EntryID = entryID;
            base.FirstName = Util.Capitalize(firstName);
            base.LastName = Util.Capitalize(lastName);

            if (null != middleName)
                base.MiddleName = Util.Capitalize(middleName);
            else
                base.SetColumnNull(_AddressBook.PropertyNames.MiddleName);

            if (homePhone != null)
                base.HomePhone = homePhone;
            else
                base.SetColumnNull(_AddressBook.PropertyNames.HomePhone);

            if (workPhone != null)
                base.WorkPhone = workPhone;
            else
                base.SetColumnNull(_AddressBook.PropertyNames.WorkPhone);

            base.PrimaryEmail = primaryEmail;
            if (secondaryEmail != null)
                base.SecondaryEmail = secondaryEmail;
            else
                base.SetColumnNull(_AddressBook.PropertyNames.SecondaryEmail);

            if (0 == userID)
                base.SetColumnNull(_AddressBook.PropertyNames.UserID);
            else
                base.UserID = userID;

            base.IsShared = isShared;

            if (businessAddress != null)
                base.BusinessAddress = businessAddress;
            else
                base.SetColumnNull(_AddressBook.PropertyNames.BusinessAddress);

            if (company != null)
                base.Company = Util.Capitalize(company);
            else
                base.SetColumnNull(_AddressBook.PropertyNames.Company);
            if (homeAddress != null)
                base.HomeAddress = homeAddress;
            else
                base.SetColumnNull(_AddressBook.PropertyNames.HomeAddress);

            if (jobTitle != null)
                base.JobTitle = jobTitle;
            else
                base.SetColumnNull(_AddressBook.PropertyNames.JobTitle);

            base.Save();
            return base.EntryID;
        }

        #endregion

        #region CopyTo

        public AddressBook CopyTo(AddressBook oAddressBook)
        {
            return (AddressBook)BLL.Helpers.DoodadsHelper.CopyData(this, oAddressBook);
        }

        #endregion
    }
}
